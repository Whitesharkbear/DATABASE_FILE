1. JSP Builtin Object (내장객체) ---> 참조 https://javaee.github.io/javaee-spec/javadocs/
   - 서버 (JSP엔진) 에서 객체를 미리 생성하여 서버 실행시 메모리에 로딩해놓음.
   - JSP 엔진에서 JSP파일을 서블릿 파일로 변환할 때 자동으로 호출하여 매핑함.
   - 빌트인 객체에 정의된 클래스나 메소드는 JAVA EE API를 참조함.

   1) request - javax.servlet.http.HttpServletRequest ★
       : 클라이언트(웹브라우저)가 서버에서 요청하는 작업 처리시 사용

   2) response - javax.servlet.http.HttpServletResponse ★
       : 클라이언트(웹브라우저)가 요청한 처리를 수행한 후 결과값을 전송

   3) out - JspWriter
       : 실행한 결과를 클라이언트(웹브라우저)에 출력
       <% out.write("<h3>빌트인 객체 테스트</h3>"); %>

   4) page - JspPage
       : this와 같은 의미로 서블릿으로 변경된 객체 자신을 참조하는 변수

   5) session - HttpSession ★
       : 로그인 / 로그아웃 기능 구현 시 인증정보를 저장하는 역할 
       : 보통 브라우저에 저장되어 사용되므로 브라우저 종료시 자동삭제됨. 

   6) application - ServletContext
       : 현재 사용중인 프로젝트를 JSP 코드에서 참조하는 객체

   7) config - ServletConfig
       : 현재 사용중인 프로젝트의 환경을 설정하거나 확인하는 참조 객체

   8) exception - 예외 처리 담당
       : 단, <%@ page isErrorPage = "false"; %> 설정된 경우 사용 불가능함. 

2. Oracle DataBase 설치

   1) 다운로드 : Oracle.com 사이트 - XE버전 다운로드(Express Edition Version : 연습용 제공)
      *참고 및 다운로드 사이트	
      https://www.notion.so/Oracle-XE-Express-Edtion-dd889a6a0d134b28a2611de6794fcd6a
      https://galvanized-cilantro-1ac.notion.site/Oracle-XE-Express-Edtion-dd889a6a0d134b28a2611de6794fcd6a

   2) 설치 및 계정 활성화 작업 - 참조문서 읽기!

3. JDBC(Java DataBase Connectivity) - java.sql 패키지로 제공

   1) 드라이버 준비 
       - C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib \ojdbc.jar 
       - 실행할 서버에 jar 파일 복사해서 준비

   2) 드라이버 로딩 : Class.forname("드라이버")

   3) Connection 객체 생성 : DriverManager.getConnection(url, user, pass)

   4) Statement 객체 생성 : Connection객체명.createStatement(~)

   5) ResultSet 객체 생성 : Statement객체명.executeQuery(sql)
       SQL : SELECT ---> ResultSet 객체 생성 ---> executeQuery(sql)
               Insert / Update / Delete ---> int 결과 리턴 ---> executeUpdate(sql)
	* CRUD
	   C - INSERT
  	   R - SELECT -> RESULTSET이 나오는부분
	   U - UPDATE
	   D - DELETE

   6) ResultSet 객체 있음 ---> ResultSet객체.next() 
       EX) Whie(ResultSet객체.next()){
		// 각 Row데이터를 저장 --> VO객체 --> ArrayList
	     }

       ResultSet 객체 없음 ---> 7)로 이동

   7) close 메소드 호출 ---> 가장 나중에 생성된 객체부터 종료