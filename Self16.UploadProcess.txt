1. 라이브러리 다운 :  메이븐 - pom.xml		
// c:\사용자\m.2폴더의 repository에 저장된다!!
					
// pom.xml 의 dependency 안에 넣어줘야한다.
<!-- FileUpload - MultipartHttpServletRequset -->
		<dependency>
    		<groupId>commons-io</groupId>
    		<artifactId>commons-io</artifactId>
    		<version>2.0.1</version>
		</dependency>

		<dependency>
		  <groupId>commons-fileupload</groupId>
		  <artifactId>commons-fileupload</artifactId>
		  <version>1.4</version>
		</dependency>

2. 환경설정 추가 : servlet-context.xml
<!-- multipartResolver -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</beans:bean> 

3. 저장폴더 생성 : resources 아래에 upload 폴더 생성 함
   --> 이미지 호출 경로 : 
      http://localhost:9000/컨텍스트명/resources/upload/파일이름.확장자


4. VO 객체에서 파일을 Multipart 객체 형태로 받도록 변수 선언
public class FileVO {
	CommonsMultipartFile file1;

	public CommonsMultipartFile getFile1() {
		return file1;
	}

	public void setFile1(CommonsMultipartFile file1) {
		this.file1 = file1;
	}	
}

5. 컨트롤러 설정
--파일을 선택한 경우에만 파일업로드 처리하도록 제어
@RequestMapping(value = "/file_upload_proc.do", 
						method = RequestMethod.POST)
	public String file_upload_proc(FileVO vo, 
					HttpServletRequest request) throws Exception{
	
		if(vo.getFile1().getOriginalFilename() != null){
			//파일 존재
			String root_path = request.getSession().getServletContext().getRealPath("/");
			String attach_path = "\\resources\\upload\\";
				
			//rfname 중복방지 처리
			UUID uuid = UUID.randomUUID();
			System.out.println((vo.getFile1().getOriginalFilename()));
			System.out.println((uuid +"_"+vo.getFile1().getOriginalFilename()));
			
			//DB저장
			
			//DB저장 완료 후 폴더에 저장하기
			System.out.println(root_path + attach_path + uuid +"_"+vo.getFile1().getOriginalFilename());
			File file 
			= new File(root_path + attach_path + uuid +"_"+vo.getFile1().getOriginalFilename());
			vo.getFile1().transferTo(file);
			
		}else{
			//파일 없음
			System.out.println("선택 파일 없음~");
		}
		
		return "file_upload_success";
	}