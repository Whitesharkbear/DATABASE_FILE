1. 개요
대표적인 서버 사이드 스크립트 언어로 전 세계 수많은 웹 시스템의 기반이 되는 언어. 
비슷한 언어로는 ASP, JSP 등이 있다. 
C-like 문법[4]로 된 CGI 보다 나았으며 펄처럼 배열이 연관배열이라 자료구조가 간편하고, 
웹 페이지 제작시 기본적으로 웹관련 함수들이 많아 생산성이 높다는 점에서 사용자, 사용처가 많다. 

PHP라는 이름은 원래 Personal Home Page Tools였는데, 지금은 PHP: Hypertext Preprocessor의 재귀 약자를 사용하고 있다.

2. 특징
PHP는 Perl 언어의 영향을 많이 받았는데 변수 이름 앞에 $를 붙이는 점 

PHP의 큰 특징 중 하나는 HTTP 프로토콜과 마찬가지로 상태를 유지하지 않는다는 점(Stateless)인데, 
PHP웹 서버에 요청을할 때 해당 스크립트를 프로세서가 실행한 뒤 종료되고 
그다음 새 요청이 들어오면 처음부터 다시 시작되는 방식이다. 
그 때문에 PHP에서 싱글톤 패턴을 구현하면 객체는 1회 요청에 의한 작업이 끝날 때까지만 유지된다. 
이러한 특성으로 인해 메모리 관리가 쉽고 웹 요청 중에 사용자(브라우저 요청)의 잘못된 입력으로 오류가 났을때 개별적으로 처리하게 되므로 안전하지만, 
상태를 유지할 수 없기에 PHP로는 DB 커넥션풀을 만들 수가 없다.

2.1. 장점
PHP는 서버에 배포하는 게 간편하다. 

PHP 인터프리터에서 실행할 때마다 파일을 확인 후 바뀐 부분이 없으면 캐시[8]를 실행하고 바뀐 부분은 다시 해석한 뒤 캐시 하는 방식으로 작동해서 업로드만 하면 되므로 간편하다.

PHP는 요청할때 새로 시작하기 때문에 오류에 대해 덜 민감하다. 

PHP는  HTML 페이지의 템플릿도 지원되면서 웹서버를 만들 수 있고 웹 개발에 필요한 관련 함수들이 내장되어 있다.

2.2. 단점
인터넷에 돌아다니는 나쁜점들은 대다수가 PHP 5 버전대 이야기다. PHP 7.0이상으로 올리자.

전체적으로 잘 설계된 언어는 결코 아니다.  

정의되지 않은변수(undefined)를 쓸 수 있었다. - 현재는 개선 

PHP 8.0부터는 인터프리터 알림에서 경고로 상향했다. 

정의되지 않은 변수쓰는게 단점인 이유는 없는 변수를 써도 무시하기 때문에 개발자가 실수를 하게되기때문이다.

2.3. 다른 웹 서비스 개발 기술과의 비교
종종 Java 진영의 JSP와 비교되기도 했었다.

일본이나 유럽 특히 프랑스에서는 PHP가 많이 쓰이고 있다.

2021년 현재에는 다음과 같은 기술들이 전 세계 웹 서비스 개발에 주로 사용되고 있다.

Java 진영의 Spring(프레임워크)
Ruby 진영의 Ruby on Rails
Python의 Django, Flask 등
JavaScript를 사용하는 Node.js 진영의 Express,AdonisJS NestJS 등
C#의 .NET , ASP.net 주로 북미에서 쓰인다
PHP는 라라벨, 심포니가 주로 쓰인다.

3. 구동방식
PHP 는 사용자가 웹을 통해 요청하면(터미널에서 입력시 3번으로)
웹 서버는 프로세스 풀에서 기존 프로세스 찾거나 새로 생성해서 SAPI 인터페이스를 통해 요청을 전달한다.
PHP 엔진에서 해당파일의 opcode(실행 코드)가 있는지 확인한다.
8.0부터 JIT 기능을 켰을때는 opcode를 JIT에서 바이너리로 바꾼다. PHP 인터프리터를 건너띄고 실행한다.
opcode가 없으면 PHP 소스 파일을 opcode로 변환한다.
파일이 있으면 opcode 를 실행하고 PHP VM을 거쳐서 실행된다.
사용자의 요청을 수행
사용자 프로그램이 종료된다. 종료되면서 gc가 수행되고 모든 객체, 변수등이 메모리에서 삭제된다.[16]
이하반복
PHP 엔진은 리눅스에서 1프로세스당 1엔진이며 1 ~ N번의 사용자 요청을 수행하고 웹서버의 프로세스 관리에 따라
프로세스가 종료된다.


