자바
	자바애플리케이션 실행과정 : 컴파일러가 자바 소스를 바이트코드로 변환한다.
						 CLASS LOADER가 바이트 코드를 런타임 데이터 영역에 로드시킴.
						 로딩된 바이트 코드가 실행엔진에 의해 실행
	자바메모리 구조: 
		스레드별: PC REGISTER, JVM STACK, NATIVE METHOD STACK
		공통: METHOD AREA, HEAP
	가비지 컬렉션: JVM에서 메모리 관리해주는 모듈
		       GC는 HEAP메모리를 재활용하기 위해서 더이상 참조되지 않는 객체들을 메모리에서 제거하는 모듈
			   개발자가 직접 제거하는 과정이 없는 장점이 있지만, MARK AND SWEEP라는 과정에서 참조되지 않는 객체를
			   찾는 과정이 있는데 이때 잠깐 스레드 과정이 중단되는 면에서 성능이 떨어지는 면이 있다.
	객체지향프로그래밍:
				현실세계의 사물과 같은 객체를 만들고 객체에 필요한 특징을 뽑아 프로그래밍을 수행
				4가지 특징
				추상성, 공통적인 특징을 뽑아 객체화시키는 특징 
				캡슐화, 정보 은닉을 통해 높은 응집도를 나타내는 특징
				상속성, 상속을 통해 재사용성을 높힌 특징
				다형성, 공통된 정의에 각기 다른 속성을 담는 특징
	추상클래스: ABSTRACT로 지시자로 정의되며 추상메소드가 하나 이상 포함
			상속받아서 재활용하고 확장시키는데 목적
	인터페이스: INTERFACE 지시자로 정의되며 모든메소드가 추상메소드로 정의
			함수의 기능을 강제해서 구현한 객체들이 같은 동작을 하는것을 보장하는 것에 목적  