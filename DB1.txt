
	DBMS를 사용하는 이유(파일시스템을 사용하면 됨)
		- 저장방식으로부터 독립화 가능
		- 빠른 데이터 접근이 가능
		- 데이터에 대한 무결성 제약조건의 준수가능
		- 동시접근가능
		- 장애복구, 보안기능
	
	데이터모델
		- 네트워크, 계층적, 관계형모델, 객체모델, 객체관모델
		
	모델링 : 현실세계를 추상화, 개체, 속성, 관계를 선과 도형을 가지고 추상화시킨다.
		- 프로그래머와 데이터베이스 설계자, 의뢰인 등과의 소통
		- 데이터 모델은 유지보수(수정, 확장)에 대한 기준자료
		- 개념적 단계(요구사항~개체, 속성, 관계 >> ER다이어그램)
		  논리적 단계(DBMS선정, 스키마)
		  물리적 단계

	EX 1)
	조건 1: 강좌는 등록 학생이 없을 수도 있다.
	조건 2: 강좌는 여러명의 학생이 등록할 수 있다.
	조건 3: 학생은 적어도 하나 이상의 강좌에 등록해야한다.
	조건 4: 학생은 하나 이상의 강좌에 등록할 수 있다.

	EX 2)
	조건 1: 교수는 적어도 하나의 학과에 소속되어야 한다.	min(교,소) = 1
	조건 2: 교수는 하나이상의 학과에 소속될 수 있다.		max(교,소) = n	
	조건 3: 학생은 적어도 하나의 학과에 소속되어야한다.	min(학,소) = 1 
	소속 4: 학생은 하나 이상의 학과에 소속될 수 없다.		max(학,소) = n	
	조건 5: 학과에는 여러명의 교수와 학생이 소솔될 수 있다.	max(학,소) = n
	
	개념적 모델링
		- 개체
		- 속성
		- 관계
		- 관계의 속성

	논리적 모델링
		- 사상규칙과정 : 개념적 모델링을 한 것을 ER다이어그램을 한 것을 -- 관계형 모델을 바탕으로 한 스키마로 변환하는 과정
			기본키(primary key)
				- 한 테이블에서 튜플간 중복되지 않는 값을 저장하고 있는 속성의 집합
			외래키(foreign key)
				- 튜플 간 관계를 표현하기 위해, 한 테이블의 기본키를 다른 테이블에서 참조하고 있는 속성	
		- 정규화과정 : 개체들의 이상현상을 제거해서 DBMS가 효율적으로 데이터를 처리하도록 관계스키마를 형성하는 것
			제 1 정규화 : 각 속성값을 원자값으로 만든다. 더이상 나눌 수 없다.
			제 2 정규화 : 기본키에 속하지 않는 속성 모두가 기본키에 완전함수 종속적이어야 한다.
					(완전함수 종속성을 갖도록 부분 함수적 종속성을 제거해야 한다.)
			제 3 정규화 : 제2정규화이면서 기본키에 속하지 않는 모든 속성이 기본키에 이행적, 종속적이지 않은 릴레이션을 의미한다.

				ER			-->			스키마
				 개체
				 속성
				 식별화
				 관계

	EX 3)
		
		
		